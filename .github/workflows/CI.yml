name: CI Pipeline

on:
  push:
    branches:
      [ main ]
  pull_request:
    branches:
      [ main ]
    types:
      [opened, synchronize, reopened]

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest

    #Action 환경에서 Redis 실행을 위한 설정 추후 서버 배포시 제거 예정
    services:
      redis:
        image: redis
        ports:
          - 6379:6379


    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      REDIS_HOST: ${{ secrets.REDIS_HOST}}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
      NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
      NAVER_SCOPE: ${{ secrets.NAVER_SCOPE }}
      NAVER_REDIRECT_URL: ${{ secrets.NAVER_REDIRECT_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      FRONT_URL: ${{ secrets.FRONT_URL }}
      BACK_URL: ${{ secrets.BACK_URL }}
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      BUCKET_REGION: ${{ secrets.BUCKET_REGION }}
      IMG_BASE_URL: ${{ secrets.BASE_URL }}
      S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
      S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
      DEFAULT_IMG_URL: ${{ secrets.DEFAULT_IMG_URL }}
      APP_DEVELOP_MODE: ${{ secrets.APP_DEVELOP_MODE }}


    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: JDK 21 버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Gradle 캐싱
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: SonarCloud 패키지 캐싱
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 빌드 권한 부여
        run: chmod +x ./gradlew
        shell: bash

      - name: 빌드 및 테스트
        run: ./gradlew build

      - name: Close PR, if build fail
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.TOKEN }}
          script: | 
            const pull_number = ${{ github.event.pull_request.number }}
            const updated_title = `[BUILD FAIL] ${{ github.event.pull_request.title }}`
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              body: '빌드에 실패했습니다.',
              event: 'REQUEST_CHANGES'
            })
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              title: updated_title,
              state: 'closed'
            })

      - name: SonarCloud 빌드및 분석
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
